{"version":3,"sources":["components/RingLoader.js","components/TextRainBow.js","components/WaveRingLoader.js","App.js","reportWebVitals.js","index.js"],"names":["RingLoader","state","className","Component","TextRainBow","style","fontSize","this","props","fontWeight","text","WaveRingLoader","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAeeA,G,wNAbXC,MAAQ,G,uDAEJ,OACI,8BACI,sBAAKC,UAAU,OAAf,oBAEI,sBAAMA,UAAU,0B,GAPXC,cCiBVC,E,4MAhBXH,MAAQ,G,uDAEJ,IAAII,EAAM,CACNC,SAASC,KAAKC,MAAMF,SACpBG,WAAWF,KAAKC,MAAMC,YAE1B,OACI,qBAAKP,UAAU,mBAAf,SACKK,KAAKC,MAAME,MAAQ,qBAAKR,UAAU,mBACnCG,MAAOA,EADa,SAElBE,KAAKC,MAAME,a,GAXHP,aCaXQ,E,4MAZXV,MAAQ,G,uDAEJ,OACI,sBAAKC,UAAU,uBAAf,UACI,yBACA,yBACA,gC,GAPaC,aCuCdS,E,4MA/BbX,MAAQ,G,uDAEN,OACE,gCACI,qBAAKC,UAAU,yBAAf,SACE,cAAC,EAAD,CAAaQ,KAAK,0BAEpB,sBAAKR,UAAU,mBAAf,UACC,oBAAIA,UAAU,aAAd,yBACC,qBAAKA,UAAU,wBAAf,SACA,8BACG,cAAC,EAAD,QAGH,qBAAKA,UAAU,6BAAf,SACA,8BACE,cAAC,EAAD,WAIJ,qBAAKA,UAAU,mBAAf,SACG,cAAC,EAAD,CAAaQ,KAAK,kDAAkDJ,SAAS,OAAOG,WAAW,UAElG,qBAAKP,UAAU,QAAf,SACE,iF,GAzBMC,aCIHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4289d3c8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nclass RingLoader extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>\n                <div className=\"ring\">\n                    Loading\n                    <span className=\"ring-content\"></span>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default RingLoader;","import React, { Component } from 'react'\nclass TextRainBow extends Component {\n    state = {  }\n    render() { \n        let style={\n            fontSize:this.props.fontSize,\n            fontWeight:this.props.fontWeight\n        }\n        return ( \n            <div className=\"over-flow-hidden\">\n                {this.props.text && <div className=\"ani-text-rainBow\" \n                style={style}\n                >{this.props.text}</div>}          \n            </div>\n         );\n    }\n}\n \nexport default TextRainBow;","import React, { Component } from 'react'\nclass WaveRingLoader extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div className=\"ani-wave-ring-loader\">\n                <span ></span>\n                <span ></span>\n                <span ></span>\n            </div>\n         );\n    }\n}\n \nexport default WaveRingLoader;","import './App.css';\nimport './components/component.css'\nimport React, { Component } from 'react';\nimport RingLoader from './components/RingLoader';\nimport TextRainBow from './components/TextRainBow';\nimport WaveRingLoader from './components/WaveRingLoader';\n\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n      <div>\n          <div className=\"text-destroy-container\">\n            <TextRainBow text=\"MY REACT COMPONENTS\"/>\n          </div>\n          <div className=\"loader-container\">\n           <h1 className=\"pre-loader\">PRE-LOADERS</h1>\n            <div className=\"ring-loader-container\">\n            <div>\n               <RingLoader />\n            </div>\n            </div>\n            <div className=\"wave-ring-loader-container\">\n            <div>\n              <WaveRingLoader />\n            </div>\n            </div>\n          </div>\n          <div className=\"footer-container\">\n             <TextRainBow text=\"Other components will be available very soon...\" fontSize=\"3rem\" fontWeight=\"900\"/>\n          </div>\n          <div className=\"coded\">\n            <h1 >Coded with love by Aniket Kumar Verma.</h1>\n          </div>\n      </div>\n     );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}